rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return request.auth.uid != null &&
        get(/databases/$(database)/documents/members/$(request.auth.uid)).data.isAdmin == true;
    }
    function isOwner(uid) {
      return request.auth.uid != null && request.auth.uid == uid;
    }
    // member 데이터 유효성 검사
    function isValidMember(uid) {
      return (
        request.resource.data.uid is string &&
        request.resource.data.uid == uid &&
        request.resource.data.isAdmin is bool &&
        request.resource.data.email is string &&
        request.resource.data.name is string &&
        request.resource.data.photoURL is string &&
        request.resource.data.point is int &&
        request.resource.data.point >= 0 &&
        request.resource.data.team is string
      );
    }

    // 특정 필드값만 수정 가능
    function updateSelectedFields(allowedFields, disallowedFields) {
      return (
          // 아래 필드값만 수정 가능
        request.resource.data.diff(resource.data).affectedKeys()
        .hasOnly(allowedFields) && 
          // 아래 필드값은 수정 불가
        !request.resource.data.diff(resource.data).affectedKeys()
        .hasAny(disallowedFields)
      );
    }

    match /games/{gameId} {
      allow read: if true;
      allow write: if isAdmin();

      match /logs/{logId} {
        allow read: if true;
        allow delete: if isOwner(resource.data.uid);
        allow create, update: if false;
      }
    }
    match /members/{memberId} {
      allow read: if true;
      allow delete: if false;
      allow create: if isValidMember(memberId);
      allow update: if (
        // 본인인 경우
        (isOwner(memberId) && updateSelectedFields(
          ['photoURL'], 
          ['uid', 'isAdmin', 'email', 'point', 'team'])) ||
        // admin이 수정 시도한 경우
        (isAdmin() 
          && updateSelectedFields(
            ['team', 'name'], 
            ['uid', 'isAdmin', 'email', 'point', 'photoURL'])
        )
      );
      
      match /logs/{logId} {
        allow read: if true;
        allow delete: if isOwner(memberId);
        allow create, update: if false;
      }
    }
  }
}